---
const { id } = Astro.props
---

<dialog
  id={id}
  class:list={[
    'bg-white rounded-lg w-full max-w-[95%] sm:max-w-lg backdrop:bg-gray-400/40 backdrop:blur-md animate-fade-down'
  ]}
>
  <button
    id={`${id}-close-button`}
    type='button'
    class='absolute right-2 top-2 z-50 rounded-md text-gray-400 hover:text-gray-600 focus:outline-none'
  >
    <span class='sr-only'>Close</span>
    <svg
      xmlns='http://www.w3.org/2000/svg'
      width='24'
      height='24'
      viewBox='0 0 24 24'
      stroke-width='2'
      stroke='currentColor'
      fill='none'
      stroke-linecap='round'
      stroke-linejoin='round'
    >
      <path stroke='none' d='M0 0h24v24H0z' fill='none'></path>
      <path d='M18 6l-12 12'></path>
      <path d='M6 6l12 12'></path>
    </svg>
  </button>
  <slot />
</dialog>

<script>
  const dialogs = document.getElementsByTagName('dialog')

  Array.from(dialogs).forEach((dialog) => {
    const buttonDialog = document.getElementById(`${dialog.id}-close-button`)

    buttonDialog?.addEventListener('click', function () {
      dialog.close()
    })

    dialog?.addEventListener('click', function (event) {
      const rect = dialog.getBoundingClientRect()
      const isInDialog =
        rect.top <= event.clientY &&
        event.clientY <= rect.top + rect.height &&
        rect.left <= event.clientX &&
        event.clientX <= rect.left + rect.width
      if (!isInDialog) {
        dialog.close()
      }
    })
  })
</script>

<style>
  dialog::backdrop {
    backdrop-filter: blur(4px);
  }
</style>
